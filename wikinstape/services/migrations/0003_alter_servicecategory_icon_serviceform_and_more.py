# Generated by Django 5.2.7 on 2025-10-17 13:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('services', '0002_remove_servicesubcategory_commission_rate'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='servicecategory',
            name='icon',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.CreateModel(
            name='ServiceForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('mobile_recharge', 'Mobile Recharge'), ('dtm', 'DTM Service'), ('electricity', 'Electricity Bill'), ('water', 'Water Bill'), ('gas', 'Gas Bill'), ('insurance', 'Insurance'), ('loan', 'Loan Service'), ('booking', 'Booking Service'), ('other', 'Other Service')], max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('max_submissions_per_user', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('service_subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_forms', to='services.servicesubcategory')),
            ],
            options={
                'verbose_name': 'Service Form',
                'verbose_name_plural': 'Service Forms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('customer_name', models.CharField(blank=True, max_length=200, null=True)),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('form_data', models.JSONField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('processing', 'Processing'), ('success', 'Success'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_gateway_response', models.JSONField(blank=True, null=True)),
                ('service_response', models.JSONField(blank=True, null=True)),
                ('service_reference_id', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.serviceform')),
                ('service_subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.servicesubcategory')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FormSubmissionFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='service_submissions/%Y/%m/%d/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.IntegerField()),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='services.servicesubmission')),
            ],
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_id', models.CharField(max_length=100, unique=True)),
                ('field_name', models.CharField(max_length=100)),
                ('field_label', models.CharField(max_length=200)),
                ('field_type', models.CharField(choices=[('text', 'Text Input'), ('number', 'Number Input'), ('email', 'Email Input'), ('phone', 'Phone Input'), ('textarea', 'Text Area'), ('boolean', 'Checkbox'), ('select', 'Dropdown'), ('multiselect', 'Multiple Select'), ('date', 'Date Picker'), ('file', 'File Upload'), ('radio', 'Radio Buttons'), ('amount', 'Amount'), ('operator', 'Operator'), ('circle', 'Circle'), ('plan_type', 'Plan Type'), ('recharge_type', 'Recharge Type')], max_length=20)),
                ('required', models.BooleanField(default=False)),
                ('readonly', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('placeholder', models.CharField(blank=True, max_length=200, null=True)),
                ('help_text', models.TextField(blank=True, null=True)),
                ('css_class', models.CharField(blank=True, max_length=100, null=True)),
                ('min_value', models.IntegerField(blank=True, null=True)),
                ('max_value', models.IntegerField(blank=True, null=True)),
                ('min_length', models.IntegerField(blank=True, null=True)),
                ('max_length', models.IntegerField(blank=True, null=True)),
                ('validation_regex', models.CharField(blank=True, max_length=500, null=True)),
                ('error_message', models.CharField(blank=True, max_length=200, null=True)),
                ('options', models.JSONField(blank=True, null=True)),
                ('use_service_options', models.CharField(blank=True, max_length=50, null=True)),
                ('order', models.IntegerField(default=0)),
                ('group', models.CharField(blank=True, max_length=100, null=True)),
                ('depends_on', models.CharField(blank=True, max_length=100, null=True)),
                ('condition_value', models.CharField(blank=True, max_length=200, null=True)),
                ('condition_type', models.CharField(choices=[('equals', 'Equals'), ('not_equals', 'Not Equals'), ('contains', 'Contains'), ('greater_than', 'Greater Than'), ('less_than', 'Less Than')], default='equals', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='services.serviceform')),
            ],
            options={
                'ordering': ['order', 'id'],
                'unique_together': {('form', 'field_id')},
            },
        ),
        migrations.AddIndex(
            model_name='servicesubmission',
            index=models.Index(fields=['submission_id'], name='services_se_submiss_18f339_idx'),
        ),
        migrations.AddIndex(
            model_name='servicesubmission',
            index=models.Index(fields=['status'], name='services_se_status_d2c86d_idx'),
        ),
        migrations.AddIndex(
            model_name='servicesubmission',
            index=models.Index(fields=['submitted_by', 'created_at'], name='services_se_submitt_337dfa_idx'),
        ),
    ]
